{"ast":null,"code":"export function getBubbleSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array; // const auxiliaryArray = array.slice();\n\n  quickSortHelper(array, animations);\n  return animations;\n}\n\nfunction quickSortHelper(mainArray, animations) {\n  for (let i = 1; i < mainArray.length; i++) {\n    let isSort = true;\n\n    for (let j = 0; j < mainArray.length - i; j++) {\n      animations.push([j, j + 1, 0]);\n      animations.push([j, j + 1, 1]);\n\n      if (mainArray[j] > mainArray[j + 1]) {\n        animations.push([j, mainArray[j + 1], 2]);\n        animations.push([j + 1, mainArray[j], 2]);\n        swap(mainArray, j, j + 1);\n        isSort = false;\n      }\n    }\n\n    animations.push([mainArray.length - i, mainArray.length - i, 3]);\n    if (isSort) break;\n  }\n}\n\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}","map":{"version":3,"sources":["/home/aman/Documents/Projects/Sorting-Visualizer-Tutorial-master/src/sortingAlgorithms/BubbleSort.js"],"names":["getBubbleSortAnimations","array","animations","length","quickSortHelper","mainArray","i","isSort","j","push","swap","arr","temp"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AAC3C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOF,KAAP,CAFoB,CAG3C;;AACAG,EAAAA,eAAe,CAACH,KAAD,EAAQC,UAAR,CAAf;AACA,SAAOA,UAAP;AACD;;AAED,SAASE,eAAT,CACEC,SADF,EAEEH,UAFF,EAGE;AAEM,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACF,MAA9B,EAAsCG,CAAC,EAAvC,EAA2C;AACzC,QAAIC,MAAM,GAAG,IAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACF,MAAV,GAAmBG,CAAvC,EAA0CE,CAAC,EAA3C,EAA+C;AAC7CN,MAAAA,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,EAAIA,CAAC,GAAC,CAAN,EAAS,CAAT,CAAhB;AACAN,MAAAA,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,EAAIA,CAAC,GAAC,CAAN,EAAS,CAAT,CAAhB;;AAEA,UAAIH,SAAS,CAACG,CAAD,CAAT,GAAeH,SAAS,CAACG,CAAC,GAAC,CAAH,CAA5B,EAAmC;AACjCN,QAAAA,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,EAAIH,SAAS,CAACG,CAAC,GAAC,CAAH,CAAb,EAAoB,CAApB,CAAhB;AACAN,QAAAA,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAC,GAAC,CAAH,EAAMH,SAAS,CAACG,CAAD,CAAf,EAAoB,CAApB,CAAhB;AACAE,QAAAA,IAAI,CAAEL,SAAF,EAAaG,CAAb,EAAgBA,CAAC,GAAC,CAAlB,CAAJ;AACAD,QAAAA,MAAM,GAAG,KAAT;AACD;AACF;;AAEDL,IAAAA,UAAU,CAACO,IAAX,CAAgB,CAACJ,SAAS,CAACF,MAAV,GAAiBG,CAAlB,EAAqBD,SAAS,CAACF,MAAV,GAAiBG,CAAtC,EAAyC,CAAzC,CAAhB;AAGA,QAAGC,MAAH,EAAW;AACZ;AACR;;AAED,SAASG,IAAT,CAAcC,GAAd,EAAmBL,CAAnB,EAAsBE,CAAtB,EAAyB;AACvB,QAAMI,IAAI,GAAGD,GAAG,CAACL,CAAD,CAAhB;AACAK,EAAAA,GAAG,CAACL,CAAD,CAAH,GAASK,GAAG,CAACH,CAAD,CAAZ;AACAG,EAAAA,GAAG,CAACH,CAAD,CAAH,GAASI,IAAT;AACD","sourcesContent":["export function getBubbleSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    // const auxiliaryArray = array.slice();\n    quickSortHelper(array, animations);\n    return animations;\n  }\n  \n  function quickSortHelper(\n    mainArray,\n    animations,\n  ) {\n      \n          for( let i = 1; i < mainArray.length; i++ ){\n            let isSort = true;\n            for( let j = 0; j < mainArray.length - i; j++ ){\n              animations.push([j, j+1, 0]);\n              animations.push([j, j+1, 1]);\n          \n              if( mainArray[j] > mainArray[j+1] ){\n                animations.push([j, mainArray[j+1], 2]);\n                animations.push([j+1, mainArray[j], 2]);\n                swap( mainArray, j, j+1 );\n                isSort = false;\n              }\n            }\n            \n            animations.push([mainArray.length-i, mainArray.length-i, 3]);\n            \n\n            if(isSort) break;\n          }\n  }\n\n  function swap(arr, i, j) {\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  \n  \n "]},"metadata":{},"sourceType":"module"}