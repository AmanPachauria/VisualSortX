{"ast":null,"code":"export function getQuickSortAnimations(array) {\n  // //Setting Time complexities\n  // document.getElementById(\"Time_Worst\").innerText = \"O(N log N)\";\n  // document.getElementById(\"Time_Average\").innerText = \"Θ(N log N)\";\n  // document.getElementById(\"Time_Best\").innerText = \"Ω(N log N)\";\n\n  // //Setting Space complexity\n  // document.getElementById(\"Space_Worst\").innerText = \"O(N)\";\n\n  const animations = [];\n  if (array.length <= 1) return array;\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\nfunction quickSortHelper(mainArray, startIdx, endIdx, animations) {\n  if (startIdx >= endIdx) return;\n  const pivotIdx = partition(mainArray, startIdx, endIdx, animations);\n  quickSortHelper(mainArray, startIdx, pivotIdx - 1, animations);\n  quickSortHelper(mainArray, pivotIdx + 1, endIdx, animations);\n  // animations.push([pivotIdx, pivotIdx, 4]);\n}\n\nfunction partition(mainArray, startIdx, endIdx, animations) {\n  let i = startIdx + 1;\n  let pivot = mainArray[startIdx];\n  animations.push([startIdx, startIdx, 3]);\n  for (var j = startIdx + 1; j <= endIdx; j++) {\n    animations.push([j, j, 3]);\n    if (pivot > mainArray[j]) {\n      animations.push([j, j, 0]);\n      animations.push([i, i, 0]);\n      animations.push([i, mainArray[j], 2]);\n      animations.push([j, mainArray[i], 2]);\n      swap(mainArray, i, j);\n      animations.push([i, j, 4]);\n      i++;\n    }\n    animations.push([j, j, 0]);\n    animations.push([j, j, 4]);\n  }\n  animations.push([i - 1, startIdx, 0]);\n  animations.push([i - 1, mainArray[startIdx], 2]);\n  animations.push([startIdx, mainArray[i - 1], 2]);\n  animations.push([startIdx, i - 1, 4]);\n  swap(mainArray, startIdx, i - 1);\n  for (var allcolor = startIdx; allcolor <= i; allcolor++) {\n    if (i >= mainArray.length) continue;\n    animations.push([allcolor, allcolor, 1]);\n  }\n  return i - 1;\n}\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}","map":{"version":3,"names":["getQuickSortAnimations","array","animations","length","quickSortHelper","mainArray","startIdx","endIdx","pivotIdx","partition","i","pivot","push","j","swap","allcolor","arr","temp"],"sources":["/home/aman/Documents/Projects/new/visualsortx/src/sortingAlgorithms/QuickSort.js"],"sourcesContent":["export function getQuickSortAnimations(array) {\n\n  // //Setting Time complexities\n  // document.getElementById(\"Time_Worst\").innerText = \"O(N log N)\";\n  // document.getElementById(\"Time_Average\").innerText = \"Θ(N log N)\";\n  // document.getElementById(\"Time_Best\").innerText = \"Ω(N log N)\";\n\n  // //Setting Space complexity\n  // document.getElementById(\"Space_Worst\").innerText = \"O(N)\";\n\n  const animations = [];\n  if (array.length <= 1) return array;\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction quickSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  animations,\n) {\n  if (startIdx >= endIdx) return;\n  const pivotIdx = partition(mainArray, startIdx, endIdx, animations);\n  quickSortHelper(mainArray, startIdx, pivotIdx - 1, animations);\n  quickSortHelper(mainArray, pivotIdx + 1, endIdx, animations);\n  // animations.push([pivotIdx, pivotIdx, 4]);\n}\n\n\nfunction partition(mainArray, startIdx, endIdx, animations) {\n  let i = startIdx + 1;\n  let pivot = mainArray[startIdx];\n\n  animations.push([startIdx, startIdx, 3]);\n\n  for (var j = startIdx + 1; j <= endIdx; j++) {\n\n    animations.push([j, j, 3]);\n\n\n    if (pivot > mainArray[j]) {\n\n      animations.push([j, j, 0]);\n      animations.push([i, i, 0]);\n\n      animations.push([i, mainArray[j], 2]);\n      animations.push([j, mainArray[i], 2]);\n\n      swap(mainArray, i, j);\n\n      animations.push([i, j, 4]);\n\n      i++;\n    }\n\n    animations.push([j, j, 0]);\n    animations.push([j, j, 4]);\n  }\n\n  animations.push([i - 1, startIdx, 0]);\n  animations.push([i - 1, mainArray[startIdx], 2]);\n  animations.push([startIdx, mainArray[i - 1], 2]);\n  animations.push([startIdx, i - 1, 4]);\n\n  swap(mainArray, startIdx, i - 1);\n\n  for (var allcolor = startIdx; allcolor <= i; allcolor++) {\n    if (i >= mainArray.length) continue;\n    animations.push([allcolor, allcolor, 1]);\n  }\n\n  return i - 1;\n}\n\n\n\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}