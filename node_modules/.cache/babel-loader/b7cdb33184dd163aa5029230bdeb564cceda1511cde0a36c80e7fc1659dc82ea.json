{"ast":null,"code":"export function getQuickSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  // const auxiliaryArray = array.slice();\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\nfunction quickSortHelper(mainArray, startIdx, endIdx, animations) {\n  if (startIdx >= endIdx) return;\n  const pivotIdx = partition(mainArray, startIdx, endIdx, animations);\n  animations.push([pivotIdx, pivotIdx, 3]);\n  quickSortHelper(mainArray, startIdx, pivotIdx - 1, animations);\n  quickSortHelper(mainArray, pivotIdx + 1, endIdx, animations);\n}\nfunction partition(mainArray, startIdx, endIdx, animations) {\n  const pivot = mainArray[startIdx];\n  let i = startIdx;\n  let j = endIdx;\n  while (i < j) {\n    while (mainArray[i] <= pivot && i <= j) {\n      animations.push([i, j, 0]);\n      animations.push([i, j, 1]);\n      animations.push([i, mainArray[i], 2]);\n      i++;\n    }\n    while (mainArray[j] > pivot && j >= startIdx) {\n      animations.push([i, j, 0]);\n      animations.push([i, j, 1]);\n      animations.push([j, mainArray[j], 2]);\n      j++;\n    }\n    if (i < j) {\n      animations.push([i, mainArray[j], 2]);\n      animations.push([j, mainArray[i], 2]);\n      swap(mainArray, i, j);\n    }\n  }\n  animations.push([startIdx, mainArray[j], 2]);\n  animations.push([j, mainArray[startIdx], 2]);\n  swap(mainArray, startIdx, j);\n  return j;\n}\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}","map":{"version":3,"names":["getQuickSortAnimations","array","animations","length","quickSortHelper","mainArray","startIdx","endIdx","pivotIdx","partition","push","pivot","i","j","swap","arr","temp"],"sources":["/home/aman/Documents/Projects/Sorting-Visualizer-Tutorial-master/src/sortingAlgorithms/QuickSort.js"],"sourcesContent":["export function getQuickSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  // const auxiliaryArray = array.slice();\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction quickSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  animations,\n) {\n  if (startIdx >= endIdx) return;\n  const pivotIdx = partition(mainArray, startIdx, endIdx, animations);\n  animations.push([pivotIdx, pivotIdx, 3]);\n  quickSortHelper(mainArray, startIdx, pivotIdx - 1, animations);\n  quickSortHelper(mainArray, pivotIdx + 1, endIdx, animations);\n}\n\nfunction partition(\n  mainArray,\n  startIdx,\n  endIdx,\n  animations,\n) {\n  const pivot = mainArray[startIdx];\n  let i = startIdx;\n  let j = endIdx;\n\n  while (i < j) {\n    while (mainArray[i] <= pivot && i <= j) {\n      animations.push([i, j, 0]);\n      animations.push([i, j, 1]);\n      animations.push([i, mainArray[i], 2]);\n      i++;\n    }\n    while (mainArray[j] > pivot && j >= startIdx) {\n      animations.push([i, j, 0]);\n      animations.push([i, j, 1]);\n      animations.push([j, mainArray[j], 2]);\n      j++;\n    }\n\n    if (i < j) {\n\n      animations.push([i, mainArray[j], 2]);\n      animations.push([j, mainArray[i], 2]);\n      swap(mainArray, i, j);\n    }\n  }\n  animations.push([startIdx, mainArray[j], 2]);\n  animations.push([j, mainArray[startIdx], 2]);\n  swap(mainArray, startIdx, j);\n  return j;\n\n}\n\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}