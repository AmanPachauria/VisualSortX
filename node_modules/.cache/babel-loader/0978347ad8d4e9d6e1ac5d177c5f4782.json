{"ast":null,"code":"export function getQuickSortAnimations(array){// //Setting Time complexities\n// document.getElementById(\"Time_Worst\").innerText = \"O(N log N)\";\n// document.getElementById(\"Time_Average\").innerText = \"Θ(N log N)\";\n// document.getElementById(\"Time_Best\").innerText = \"Ω(N log N)\";\n// //Setting Space complexity\n// document.getElementById(\"Space_Worst\").innerText = \"O(N)\";\nvar animations=[];if(array.length<=1)return array;quickSortHelper(array,0,array.length-1,animations);return animations;}function quickSortHelper(mainArray,startIdx,endIdx,animations){if(startIdx>=endIdx)return;var pivotIdx=partition(mainArray,startIdx,endIdx,animations);quickSortHelper(mainArray,startIdx,pivotIdx-1,animations);quickSortHelper(mainArray,pivotIdx+1,endIdx,animations);// animations.push([pivotIdx, pivotIdx, 4]);\n}function partition(mainArray,startIdx,endIdx,animations){var i=startIdx+1;var pivot=mainArray[startIdx];animations.push([startIdx,startIdx,3]);for(var j=startIdx+1;j<=endIdx;j++){animations.push([j,j,3]);if(pivot>mainArray[j]){animations.push([j,j,0]);animations.push([i,i,0]);animations.push([i,mainArray[j],2]);animations.push([j,mainArray[i],2]);swap(mainArray,i,j);animations.push([i,j,4]);i++;}animations.push([j,j,0]);animations.push([j,j,4]);}animations.push([i-1,startIdx,0]);animations.push([i-1,mainArray[startIdx],2]);animations.push([startIdx,mainArray[i-1],2]);animations.push([startIdx,i-1,4]);swap(mainArray,startIdx,i-1);for(var allcolor=startIdx;allcolor<=i;allcolor++){if(i>=mainArray.length)continue;animations.push([allcolor,allcolor,1]);}return i-1;}function swap(arr,i,j){var temp=arr[i];arr[i]=arr[j];arr[j]=temp;}","map":{"version":3,"sources":["/home/aman/Documents/Projects/VisualSortX/src/sortingAlgorithms/QuickSort.js"],"names":["getQuickSortAnimations","array","animations","length","quickSortHelper","mainArray","startIdx","endIdx","pivotIdx","partition","i","pivot","push","j","swap","allcolor","arr","temp"],"mappings":"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","sourcesContent":["export function getQuickSortAnimations(array) {\n\n  // //Setting Time complexities\n  // document.getElementById(\"Time_Worst\").innerText = \"O(N log N)\";\n  // document.getElementById(\"Time_Average\").innerText = \"Θ(N log N)\";\n  // document.getElementById(\"Time_Best\").innerText = \"Ω(N log N)\";\n\n  // //Setting Space complexity\n  // document.getElementById(\"Space_Worst\").innerText = \"O(N)\";\n\n  const animations = [];\n  if (array.length <= 1) return array;\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction quickSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  animations,\n) {\n  if (startIdx >= endIdx) return;\n  const pivotIdx = partition(mainArray, startIdx, endIdx, animations);\n  quickSortHelper(mainArray, startIdx, pivotIdx - 1, animations);\n  quickSortHelper(mainArray, pivotIdx + 1, endIdx, animations);\n  // animations.push([pivotIdx, pivotIdx, 4]);\n}\n\n\nfunction partition(mainArray, startIdx, endIdx, animations) {\n  let i = startIdx + 1;\n  let pivot = mainArray[startIdx];\n\n  animations.push([startIdx, startIdx, 3]);\n\n  for (var j = startIdx + 1; j <= endIdx; j++) {\n\n    animations.push([j, j, 3]);\n\n\n    if (pivot > mainArray[j]) {\n\n      animations.push([j, j, 0]);\n      animations.push([i, i, 0]);\n\n      animations.push([i, mainArray[j], 2]);\n      animations.push([j, mainArray[i], 2]);\n\n      swap(mainArray, i, j);\n\n      animations.push([i, j, 4]);\n\n      i++;\n    }\n\n    animations.push([j, j, 0]);\n    animations.push([j, j, 4]);\n  }\n\n  animations.push([i - 1, startIdx, 0]);\n  animations.push([i - 1, mainArray[startIdx], 2]);\n  animations.push([startIdx, mainArray[i - 1], 2]);\n  animations.push([startIdx, i - 1, 4]);\n\n  swap(mainArray, startIdx, i - 1);\n\n  for (var allcolor = startIdx; allcolor <= i; allcolor++) {\n    if (i >= mainArray.length) continue;\n    animations.push([allcolor, allcolor, 1]);\n  }\n\n  return i - 1;\n}\n\n\n\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}\n"]},"metadata":{},"sourceType":"module"}